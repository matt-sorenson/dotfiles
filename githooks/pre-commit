#! /usr/bin/env zsh

pre-commit() {
    emulate -L zsh
    set -uo pipefail
    setopt err_return
    setopt null_glob
    setopt typeset_to_unset
    setopt warn_create_global
    unsetopt short_loops

    local -a checks=("${DOTFILES}/githooks/"*.pre-commit)

    if (( ! ${#checks[@]} )); then
        print-header cyan "No pre-commit hooks found."
        return 0
    fi

    local -a all_staged_files=("${(@f)$(git diff --cached --name-only --diff-filter=ACM)}")

    if (( ! ${#all_staged_files[@]} )); then
        print-header cyan "No staged files found found."
        return 0
    fi

    local -i errors_found=0
    local file staged_file precommit_check


    for file in "${all_staged_files[@]}"; do
        # Skip non-existent or non-regular files (can happen with deletions or renames)
        [[ -f $file ]] || continue

        staged_file=$(mktemp)
        # Get the staged instance of the file instead of the
        git show ":${file}" > "${staged_file}"

        for precommit_check in "${checks[@]}"; do
            "$precommit_check" "$staged_file" "$file"
        done

        rm "$staged_file"
    done

    return $errors_found
}

pre-commit "$@"
