#! /usr/bin/env zsh
#compdef git-alias

git-alias() {
    emulate -L zsh
    set -uo pipefail
    setopt err_return extended_glob typeset_to_unset warn_create_global null_glob
    unsetopt short_loops

    local _usage="Usage: git alias [-h|--help]

List all git aliases configured in the repository.

Options
  -h, --help    Show this help message"

    eval "$(dot-parse-opts --dot-parse-opts-init)"
    local dot_parse_code=0
    dot-parse-opts "$@" || dot_parse_code=$?
    if (( -1 == dot_parse_code )); then
        return 0
    elif (( dot_parse_code )); then
        return $dot_parse_code
    fi

    local lines
    # Retrieve alias lines: "alias.aliasName command..."
    lines=("${(@f)$(git config --get-regexp "^alias\.")}")
    # Remove "alias." prefix from each line
    lines=("${lines[@]#alias.}")

    if (( ! ${#lines})); then
        print-header -w "No aliases found"
        return 0
    fi

    # Find longest alias name
    local max=0
    local line
    for line in "${lines[@]}"; do
        local current="${line%% *}"
        (( ${#current} > max )) && max=${#current}
    done

    # Print each with padding: two spaces between alias and command
    for line in "${lines[@]}"; do
        local alias_name="${line%% *}"
        local cmd="${line#* }"
        printf "%-${max}s  %s\n" "${alias_name}" "${cmd}"
    done
}

git-alias "$@"
