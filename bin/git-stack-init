#!/usr/bin/env zsh
#compdef git-stack-init

git-stack-init() {
    emulate -L zsh
    set -uo pipefail
    setopt err_return
    setopt typeset_to_unset
    setopt warn_create_global
    unsetopt short_loops

    local _usage="Usage git stack-init [-h|--help][--no-clear]

Options:
  -q, --quiet Suppress some output messages
  -h, --help  Show this help message

  --no-clear  Do not clear the stack before initializing"

    local -A flags=(
        [clear]=1
        [quiet]=0
    )

    while (( $# )); do
        case $1 in
        -h|--help)
            print "${_usage}"
            return 0
            ;;
        --no-*)
            local flag="${1#--no-}"
            if [[ -v 'flags[$flag]' ]]; then
                flags[$flag]=0
            else
                print-header -e "Unexpected flag '$1'"
                print "${_usage}"
                return 1
            fi
            ;;
        --*)
            local flag="${1#--}"
            if [[ -v 'flags[$flag]' ]]; then
                flags[$flag]=1
            else
                print-header -e "Unexpected flag '$1'"
                print "${_usage}"
                return 1
            fi
            ;;
        *)
            print-header -e "Unexpected argument '$1'"
            print "${_usage}"
            return 1
            ;;
        esac
        shift
    done

    local -a branch_list
    branch_list=("${(@f)$(git log -g HEAD --format="%gs" \
        | grep '^checkout: moving from ' \
        | sed 's/^checkout: moving from //' \
        | awk '
            BEGIN { FS = " to "; prev = "" }
            NF == 2 {
                if ($2 != prev) {
                    print $2
                    prev = $2
                }
            }
            NF != 2 {
                print "ERROR: unrecognized format -> \"" $0 "\"" > "/dev/stderr"
            }
        ')}")

    if (( ${#branch_list[@]} == 0 )); then
        print-header cyan "No branches found to add to stack. Stack Unchanged."
        return 1
    fi

    if (( flags[clear] )); then
        local -a args=()
        if (( flags[quiet] )); then
            args+=('--quiet')
        fi

        git stack --clear ${args[@]} || {
            print-header -e "Failed to clear the stack."
            return 1
        }
    fi

    local branch
    for branch in "${(@Oa)branch_list}"; do
        if [[ -n "$branch" ]]; then
            if ! git pushb --no-checkout "$branch"; then
                print-header -e "Failed to add branch '$branch' to stack."
                return 1
            fi
        fi
    done
}

git-stack-init "$@"
