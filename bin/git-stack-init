#! /usr/bin/env zsh
#compdef git-stack-init

git-stack-init() {
    emulate -L zsh
    set -uo pipefail
    setopt err_return
    setopt typeset_to_unset
    setopt warn_create_global
    unsetopt short_loops

    local _usage="Usage git stack-init [-h|--help][--no-clear]

Options:
  -q, --quiet Suppress some output messages
  -h, --help  Show this help message

  --no-clear  Do not clear the stack before initializing"

    eval "$(<"${DOTFILES}/zsh/dot-parse-opts-init.zsh")"

    short_to_long_flags[c]=clear
    short_to_long_flags[q]=quiet
    flags[clear]=1
    flags[quiet]=0

    eval "$(< "${DOTFILES}/zsh/dot-parse-opts.zsh")"

    local -a branch_list=()
    local prev_branch=""
    local branch
    for branch in ${(f)"$(git log -g HEAD --format="%gs" \
        | grep '^checkout: moving from ' \
        | sed 's/^checkout: moving from //' \
        | awk -F ' to ' 'NF==2 { print $2 }')"}; do

        if git show-ref --verify --quiet "refs/heads/${branch}"; then
            if [[ "$branch" != "$prev_branch" ]]; then
                branch_list+=("$branch")
                prev_branch="$branch"
            fi
        fi
    done

    if (( ${#branch_list[@]} == 0 )); then
        print-header cyan "No branches found to add to stack. Stack Unchanged."
        return 1
    fi

    if (( flags[clear] )); then
        local -a args=()
        if (( flags[quiet] )); then
            args+=('--quiet')
        fi

        git stack --clear ${args[@]} || {
            print-header -e "Failed to clear the stack."
            return 1
        }
    fi

    local current_branch_name="$(git rev-parse --abbrev-ref HEAD)"
    local -i added_count
    added_count=0
    while (( ${#branch_list} )); do
        branch="${branch_list[1]}"
        branch_list=("${branch_list[@]:1}")

        if (( ! ${#branch_list} )) && [[ "$branch" == "$current_branch_name" ]]; then
            continue
        elif [[ -n "$branch" ]]; then
            if ! git pushb --no-checkout "$branch"; then
                print-header -e "Failed to add branch '$branch' to stack."
                return 1
            fi

            (( added_count += 1 ))
        fi
    done

    if (( ! flags[quiet] )); then
        if (( added_count > 0 )); then
            print-header green "Added $added_count branches to the stack."
        else
            print-header cyan "No branches were added to the stack."
        fi
    fi
}

git-stack-init "$@"
