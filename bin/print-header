#!/usr/bin/env zsh
#compdef print-header

autoload -Uz colors && colors

function() {
    emulate -L zsh
    set -uo pipefail
    setopt err_return
    setopt typeset_to_unset

    local _usage="Usage: print-header [-h|--help] [-i <indent>|--indent <indent>] [<color>] <message>

Arguments:
  <color>                        The color of the header (e.g., red, green, blue)
  <message>                      The message to display in the header

Options:
  -h, --help                     Show this help message and exit
  -i <indent>, --indent <indent> Indent the header by the specified number of spaces (default: 0)"

    local indent=0
    local color=''
    local parts=()
    local icon

    while (( $# )); do
        case "$1" in
            -h|--help)
                print "${_usage}"
                return 0
                ;;
            -i|--indent|-wi|-we)
                if (( $# < 2 )); then
                    print-header -e "Error: '$1' requires an argument."
                    print "${_usage}"
                    return 1
                fi

                if [[ "$1" == "-wi" || "$1" == "-wi" ]]; then
                    # add -w or -e to the argv array
                    argv+=("-${1[2]}")
                fi

                indent="$2"
                shift
                ;;
            -w|--warn)
                color="${fg_bold[yellow]}"
                icon='⚠️ '
                ;;
            -e|--error)
                color="${fg_bold[red]}"
                icon='❗ '
                ;;
            -*)
                print-header -e "Unknown option: $1"
                print "${_usage}"
                return 1
                ;;
            *)
                case "$1" in
                    "\\033"*)
                        "${color}${1}"
                        ;;
                    black|red|green|yellow|blue|magenta|cyan|white)
                        color="${color}${fg_bold[${1}]}"
                        ;;
                    bgblack|bgred|bggreen|bgyellow|bgblue|bgmagenta|bgcyan|bgwhite)
                        color="${color}${bg[${1#bg}]}"
                        ;;
                    *)
                        parts+=("$1")
                esac
                ;;
        esac
        shift
    done

    local message
    if (( ${#parts[@]} )); then
        message+="${(j: :)parts}"
    else
        print-header -w "No message provided."
        message+="No message provided."
    fi
    unset parts

    message="= ${icon:-}${message}"
    local msg_length=$(( ${#message} + 2))
    if [[ -v icon ]]; then
        # The icons are printed as 2 characters in zsh so need to account for
        msg_length=$(( msg_length + 1 ))
    fi

    local header_length=$(( msg_length > 80 ? msg_length: 80 ))
    message="${message}${(l:$(( header_length - msg_length )):: :):-} ="

    local indent_space="${(l:$indent:: :):-}"
    local header="${(l:$header_length::=:):-}"
    print "${indent_space}${color}${header}
${indent_space}${color}${message}
${indent_space}${color}${header}${reset_color}"
} "$@"
