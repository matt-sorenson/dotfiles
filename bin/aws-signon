#!/usr/bin/env zsh
#compdef aws-signon

function() {
    emulate -L zsh
    set -uo pipefail
    setopt err_return
    setopt typeset_to_unset

    if ! command -v aws &> /dev/null; then
        print-header -e "aws CLI must be installed to run aws-signon"
        return 1
    fi

    local _usage="Usage: aws-signon [-f|--force] [-h|--help] <profile>

Options:
  -f, --force                         Force login even if already signed in
  -h, --help                          Show this help message
  <profile>                           AWS profile to sign into

Examples:
aws-signon -f dev
aws-signon dev
aws-signon dev -f"

    local force=0
    local profile

    while (( $# )); do
        case "$1" in
            -h|--help)
                print "${_usage}"
                return 0
                ;;
            -f|--force)
                force=1
                ;;
            -*)
                print-header -e "Unknown option: $1"
                print "${_usage}"
                return 1
                ;;
            *)
                if [ -v profile ]; then
                    print-header -e "Profile passed in multiple times! New: ${1}, Old: ${profile}"
                    print "${_usage}"
                    return 1
                fi
                profile="$1"
                ;;
        esac
        shift
    done

    export AWS_PROFILE
    if [[ -v profile ]]; then
        AWS_PROFILE="${profile}"
        unset profile
    elif [[ -n "${AWS_PROFILE}" ]]; then
        print "No profile specified, using \$AWS_PROFILE: ${AWS_PROFILE}"
    else
        print-header -e "No profile specified & \$AWS_PROFILE is not available!"
        print "${_usage}"
        return 1
    fi

    print-header green --icon 🔐 "Signing into AWS: ${AWS_PROFILE}"

    if (( ! force )); then
        if aws sts get-caller-identity --profile "${AWS_PROFILE}" &> /dev/null; then
            print "already signed in as ${AWS_PROFILE}"
            return 0
        fi

        print "not signed in, attempting SSO login for '${AWS_PROFILE}'..."
    fi

    aws sso login --profile "${AWS_PROFILE}"
} "$@"
