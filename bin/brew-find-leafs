#! /usr/bin/env zsh
#compdef brew-find-leafs

brew-find-leafs() {
    emulate -L zsh
    set -uo pipefail
    setopt err_return
    setopt null_glob
    setopt warn_create_global
    unsetopt short_loops

    local flag_remove=0
    local flag_quiet=0

    local _usage="Usage: brew-find-leafs [-h|--help]

    Finds brew formulas that aren't depended on by any other packages.
    This is useful for cleaning up unused dependencies.

    Options:
    -h, --help   Show this help message and exit
    -r, --remove Ask to remove formulas that are not depended on by other formulas
    -q, --quiet  Suppress most output, only show the forumulas that would be removed

    There is explicitly not a -f or --force option as this script can't tell if you
    manually installed a formula or if it was installed as a dependency."

    if ! command -v brew &> /dev/null; then
        print-header "Can't find the 'brew' command"
        return 1
    fi

    while (( $# )); do
        case "$1" in
        -h|--help)
            print "${_usage}"
            return 0
            ;;
        -r|--remove) flag_remove=1 ;;
        -q|--quiet) flag_quiet=1 ;;
        -[!-]*)
            local arg_list=("${(@s::)1#-}")

            # Process by popping front each time
            while (( ${#arg_list} )); do
                local arg=${arg_list[1]}
                # Pop the front of the list
                arg_list=("${arg_list[@]:1}")

                case $arg in
                r) flag_remove=1 ;;
                q) flag_quiet=1 ;;
                h)
                    print "${_usage}"
                    return 0
                    ;;
                *)
                    print-header -e "Unknown option: -${arg}"
                    print "${_usage}"
                    return 1
                    ;;
                esac
            done
            ;;
        *)
            print-header -e "Unknown option: $1"
            print "${_usage}"
            return 1
            ;;
        esac

        shift
    done

    if (( flag_quiet && flag_remove )); then
        print "Error: --quiet and --remove are mutually exclusive."
        exit 1
    fi

    if (( ! flag_quiet )); then
        print-header green "Searching for formulas not depended on by other formulas..."
    fi

    local -a formulas=()
    local formula
    local -A depended_on=()

    local deps dep
    while IFS=: read -r formula deps; do
        formulas+=("$formula")

        deps=("${(s: :)deps}")
        for dep in $deps; do
            depended_on[$dep]=1
        done
    done < <(brew deps --installed)

    for formula in $formulas; do
        if [[ ! -v depended_on[$formula] ]]; then
            if (( flag_remove )); then
                local input
                if read -q "?Remove ${formula}? [Y/n] "; then
                    print
                    brew remove "${formula}"
                    check_formulas $(brew deps --1 --installed "${formula}")
                fi
                unset input
            else
                print "$formula"
            fi
        fi
    done
}

brew-find-leafs "$@"
